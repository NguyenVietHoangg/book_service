block content
  script(type='text/javascript').
    $(function () {
      // phần này sẽ là validation cơ bản cho các input của form
      $('.select2').select2({
      templateResult: formatState,
      templateSelection: formatState
    });

    function formatState (opt) {
      var optimage = $(opt.element).attr('data-image'); 
      if(!optimage){
      return opt.text;
      } else {                    
          var $opt = $(
          '<span><img src="' + optimage + '" width="18px" /> ' + opt.text + '</span>'
          );
          return $opt;
      }
    };
    $( "#form-story" ).validate({
      rules: {
        //- categoryId: {required: true},
        name: {required: true},
        //- slug: {required: true},
        //- author: {required: true},
        //- resource: {required: true},
        //- origin: {required: true},
        //- categoryListString: {required: true},
        //- link: {required: true}
      },
      messages: {
        //- categoryId: 'Please enter categoryId',
        name: 'Please enter name',
        //- slug: 'Please enter slug',
        //- author: 'Please enter author',
        //- resource: 'Please enter resource',
        //- origin: 'Please enter origin',
        //- categoryListString: 'Please enter categoryListString',
        //- link: 'Please enter link'
      },
      errorElement: "em",
      errorPlacement: function ( error, element ) {
        error.addClass( "help-block" );
        if ( element.prop( "type" ) === "checkbox" ) {
          error.insertAfter( element.parent( "label" ) );
        } else {
          error.insertAfter( element );
        }
      },
      highlight: function ( element, errorClass, validClass ) {
        $( element ).parents( ".input-data-block" ).addClass( "has-error" ).removeClass( "has-success" );
      },
      unhighlight: function (element, errorClass, validClass) {
        $( element ).parents( ".input-data-block" ).addClass( "has-success" ).removeClass( "has-error" );
      },
      submitHandler: function(form) {
        let x = document.querySelectorAll(".checkCategory")
        let sum = 0
        for (i = 0; i < x.length; i++) {
        let y = x[i].checked    
          if(y == true){
            sum++
          }
        }    
        if(sum == 0){
          Swal.fire({
            icon: 'error',            
            text: 'Bạn phải chọn ít nhất 1 danh mục !'            
          })         
          return
        } 


        let sum1 = 0 
        let k = document.querySelectorAll(".daysang")       
        for (j = 0; j < k.length; j++){
          let l =  k[j].checked
          if(l == true){
          sum1++
          }          
        } 
        if(sum1 > 1){
          Swal.fire({
            icon: 'error',            
            text: 'Chỉ được đẩy sang cho 1 bên đối tác!'            
          }) 
          return
        } 

        
        Swal.fire({
          title: 'Bạn có chắc chắn cập nhật bài viết',
          text: "Bài viết sẽ được cập nhật và chờ duyệt để publish",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Đồng ý',
          cancelButtonText: 'Hủy'
        }).then((result) => {
          if (result.value) {
            form.submit();
          }
        })
        }
      });

      $("#form-add-story").validate({
        rules: {
          name: {required: true},
        },
        messages: {
          name: 'Đặt tiêu đề bài viết',
        },
        errorElement: "em",
        errorPlacement: function ( error, element ) {
          error.addClass( "help-block" );
          if ( element.prop( "type" ) === "checkbox" ) {
            error.insertAfter( element.parent( "label" ) );
          } else {
            error.insertAfter( element );
          }
        },
        highlight: function ( element, errorClass, validClass ) {
          $( element ).parents( ".input-data-block" ).addClass( "has-error" ).removeClass( "has-success" );
        },
        unhighlight: function (element, errorClass, validClass) {
          $( element ).parents( ".input-data-block" ).addClass( "has-success" ).removeClass( "has-error" );
        },
        submitHandler: function(form) {
          Swal.fire({
            title: 'Bạn có chắc chắn tạo bài viết',
            text: "Bài viết sẽ được tạo tạm thời và chuyển sang chế độ chỉnh sửa",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Đồng ý',
            cancelButtonText: 'Hủy'
          }).then((result) => {
            if (result.value) {
              form.submit();
            }
          })
        }
      });
    })