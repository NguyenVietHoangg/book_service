extends ../layouts/base

block breadcrumb
  ol.breadcrumb
    li
      a(href='/')
        i.fa.fa-dashboard
        |  Home
    li.active Admin
block content
  .box
    .box-body
      .row
        .col-lg-12.col-md-12
          #box-filter.box.box-filter.collapsed-box
            .box-header
              .buttons-toolbar
              #toolbar
                a.btn.btn-success(href='/menu/create')
                  i.fa.fa-plus
                  |  Create
                button#remove.btn.btn-danger(disabled='')
                  i.fa.fa-trash
                  |  Delete
                button.btn.btn-primary(type='button' data-widget='collapse')
                  i.fa.fa-filter
                  |  Filter
            .box-body(style='display: none;')
              .form.form-filter(role='form')
                .row
                  .col-lg-4.col-md-4
                    .form-group
                      input#title.form-control(type='text' placeholder='title...' name='title')
                  .col-lg-4.col-md-4
                    .form-group
                      input#route.form-control(type='text' placeholder='Route...' name='route')
                  .col-lg-4.col-md-4
                    .form-group
                      select.form-control.status-selection(name='status')
                        option(value='1') Active
                        option(value='0') InActive
                .row
                  .col-lg-2.col-md-2
                    .form-group
                      button#filter.btn.btn-primary(type='submit')
                        i.fa.fa-filter
                        |  Filter
          table#table(data-buttons-toolbar='.buttons-toolbar' data-toolbar-align='unset' data-search='false' data-icons-prefix='fa' data-show-refresh='false' data-show-toggle='false' data-show-columns='true' data-show-export='true' data-detail-view='false' data-detail-formatter='detailFormatter' data-minimum-count-columns='2' data-show-pagination-switch='false' data-pagination='true' data-id-field='id' data-page-list='[10, 25, 50, 100, ALL]' data-show-footer='false' data-side-pagination='server' data-url='/menu/list' data-query-params='queryParams' data-response-handler='responseHandler')

block stylesheets
  link(rel='stylesheet' href='/libs/bootstrap-table/bootstrap-table.min.css')

block scripts
  script(src='/libs/bootstrap-table/tableExport.min.js')
  script(src='/libs/bootstrap-table/bootstrap-table.min.js')
  script(src='/libs/bootstrap-table/extensions/export/bootstrap-table-export.min.js')
  script.
    const $table = $('#table');
    const $remove = $('#remove');
    const $filter = $('#filter');

    $(function () {
      $filter.click(function () {
        $table.bootstrapTable('refresh')
      })
    });
    function queryParams(defaultParams) {
      console.log('defaultparams', defaultParams)
      var params = defaultParams;
      $('#box-filter .form-filter').find('input[name]').each(function () {
        params[$(this).attr('name')] = $(this).val()
      })
      $('#box-filter .form-filter').find('select').each(function () {
        params[$(this).attr('name')] = $(this).val()
      })

      return params;
    }

    function initTable() {
      $table.bootstrapTable({
        formatLoadingMessage: function () {
          return '<div class="table-loading-data"><img src="/admin/images/table-loading-data.svg"/></div>';
        },
        height: getHeight(),
        icons: {
          columns: 'fa-th-list',
          export: 'fa-file'
        },
        columns: [
          [
            {
              field: 'state',
              checkbox: true,
              align: 'center',
              valign: 'middle',
              class: 'valign-middle'
            }, {
              field: 'title',
              title: 'Title',
              sortable: true,
              editable: true,
              align: 'left',
              valign: 'middle',
              formatter: menuTitleFormatter
            }, {
              field: 'route',
              title: 'Route',
              sortable: true,
              align: 'center',
              valign: 'middle',
            }, {
              field: 'order',
              title: 'Order',
              sortable: true,
              align: 'center',
              valign: 'middle',
              formatter: orderFormatter
            }, {
              field: 'statusDisplay',
              title: 'Trạng thái',
              sortable: true,
              align: 'center',
              valign: 'middle',
            }, {
              field: 'operate',
              title: 'Actions',
              align: 'center',
              valign: 'middle',
              //- events: operateEvents,
              formatter: operateFormatter
            }
          ]
        ]
      });
      // sometimes footer render error.
      setTimeout(() => {
        $table.bootstrapTable('resetView');
      }, 200);
      $table.on('check.bs.table uncheck.bs.table ' +
        'check-all.bs.table uncheck-all.bs.table', () => {
          $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);
          // save your data, here just save the current page
          selections = getIdSelections();
          // push or splice the selections if you want to save all data selections
        });
      $remove.click(() => {
        const ids = getIdSelections();
        let xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
            window.location.href = '/menu';
          }
        };
        xhttp.open('GET', '/menu/delete/' + JSON.stringify(ids), true);
        xhttp.send();
      });
      $(window).resize(() => {
        $table.bootstrapTable('resetView', {
          height: getHeight()
        });
      });
    }
    function getIdSelections() {
      return $.map($table.bootstrapTable('getSelections'), ({ id }) => id);
    }
    function responseHandler(res) {
      return res;
    }
    /*=== Function table formatter ===*/
    function menuTitleFormatter(value, row, index) {
      let html = '';
      if (!row.parent) {
        html += '<div class="node-parent">'+ row.title +'</div>';
      } else {
        html += '<div class="node-children">'+ row.title +'</div>';
      }
      return html;
    }

    function orderFormatter(value, row, index) {
      let html = '';
      html += '<span class="fa fa-angle-double-up update-order" title="Move up" onclick="updateOrder(\''+ row.id + '\', 1)"></span>';
      html += '<span class="fa fa-angle-double-down update-order" title="Move down" onclick="updateOrder(\''+ row.id + '\', 2)"></span>';
      return html;
    }
    function detailFormatter(index, row) {
      const html = [];
      $.each(row, (key, value) => {
        html.push(`<p><b>${key}:</b> ${value}</p>`);
      });
      return html.join('');
    }
    function operateFormatter(value, row, index) {
      return [
        `<a class="user-action edit" href="/menu/update/${row.id}" title="Edit">`,
        '<i class="fa fa-edit"></i> Edit',
        '</a>'
      ].join('');
    }
    function getHeight() {
      //- return $(window).height() - $('h1').outerHeight(true);
    }
    function formatResult(data) {
      if (data.loading) {
        return data.text;
      }

      var markup = data.name;

      return markup;
    }
    function formatSelection(data) {
      return data.name || data.text;
    }

    function updateOrder(id, direction) {
      console.log('id', id, 'dir', direction)
      $.ajax({url: "/menu/update-order/" + id + "/" + direction, success: function(result){
        console.log("result", result)
        $table.bootstrapTable('refresh')
      }});
    }

    $(() => {
      initTable();
    });